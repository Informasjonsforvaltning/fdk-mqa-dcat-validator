name: Deploy to production & demo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Coverage test
        run: mvn clean verify --no-transfer-progress

      - name: Coverage upload
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.txt

  build:
    name: Build fdk-mqa-dcat-validator when pull request is created
    uses: Informasjonsforvaltning/workflows/.github/workflows/build-push.yaml@main
    with:
      app_name: fdk-mqa-dcat-validator
      environment: prod
      build_env: true
      build_env_name: BINARY
      build_env_value: fdk-mqa-dcat-validator
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GCP_SA_DIGDIR_FDK_GCR_KEY: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

  deploy-prod:
    name: Deploy to prod environment with reusable workflow
    if: github.event.pull_request.draft == false
    needs: [ run-tests, build ]
    uses: Informasjonsforvaltning/workflows/.github/workflows/kustomize-deploy.yaml@main
    with:
      app_name: fdk-mqa-dcat-validator
      environment: prod
      cluster: digdir-fdk-prod
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DIGDIR_FDK_AUTODEPLOY: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy-demo:
    name: Deploy to demo environment with reusable workflow
    if: github.event.pull_request.draft == false
    needs: [ run-tests, build ]
    uses: Informasjonsforvaltning/workflows/.github/workflows/kustomize-deploy.yaml@main
    with:
      app_name: fdk-mqa-dcat-validator
      environment: demo
      cluster: digdir-fdk-dev
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DIGDIR_FDK_AUTODEPLOY: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
